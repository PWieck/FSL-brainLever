#include <Stepper.h>
/*
200 steps per revolution
update the input quickly and set the RPM high, 60? 50?
change the input values 0%-100%, the code will be based off that
88 steps brings it just short of 160 degrees
 
*/

//----------------------------------------------Variable assignment----------------------------------------------------


//Sets origin position to position at program start
int PreviousStepPosition = 0


//-------------------------------------------------Motor pin assignment--------------------------------------------------

//Assigning emg in pin
int EMGin = A2

// Assigning stepper motor pins
Stepper Step1 = Stepper(200,3,4,5,6) // temp pins, update when known


void setup()
{
    pinMode(EMGin, INPUT); //EMG pin setup
}
void loop()
{
  ArmRotationRaw = analogRead(EMGin);
  ArmRotationRaw/11.6363636 = ArmSteps; //how many steps from origin the position is
  
  -(PreviousStepPosition - ArmSteps) = StepsToMove;
  
   Switch (StepsToMove) 
    {
    
    Case (StepsToMove > 0): 
     {
      Step1.step(1);
      PreviousStepPosition + 1 = PreviousStepPosition;
     }
    Case (StepsToMove < 0): 
     {
      Step1.step(-1)
      PreviousStepPosition - 1 = PreviousStepPosition;
     }
    Case (StepsToMove = 0): 
     {
      break;
     }
}
